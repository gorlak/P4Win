name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: [windows-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
          submodules: recursive

    - name: Setup vcvars
      uses: ilammy/msvc-dev-cmd@v1

    - name: Premake
      run: |
        cd ${{ github.workspace }}
        cmd.exe /c call premake.bat vs2019

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Build Release
      run: |
        MSBuild.exe Build\P4Win.sln -p:Configuration=Release

    - name: Source Index PDB
      run: |
        cmd.exe /c call source_index_pdb.bat Bin\Release\P4.pdb
        cmd.exe /c call source_index_pdb.bat Bin\Release\P4Win.pdb

    - name: Build Installer
      run: |
        cmd.exe /c call installer.bat

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        draft: false
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}

    - name: Upload Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: Bin/Release/P4WinSetup.exe
        asset_name: P4WinSetup.exe
        asset_content_type: application/vnd.microsoft.portable-executable